deu$religion[is.na(deu$religion)] <- "protestantism lutheran"
deu$ethnicity[is.na(deu$ethnicity)] <- "white"
match_obj <- matchit(sex ~ birthyear + session + total_service + total_traffic + religion + ethnicity,
data = deu, method = "cem")
matched_data <- match.data(match_obj)
str(deu$session)
match_obj <- matchit(sex ~ birthyear + session + total_service + total_traffic,
data = deu, method = "cem")
matched_data <- match.data(match_obj)
# Setze den Titel der Wikipedia-Seite
wikititle <- "Adolf_Arndt"
# Berechne das Datum von vor 10 Jahren
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")
# Rufe die Seite von vor 10 Jahren ab
page_content <- page_content(language = "en", project = "wikipedia", title = wikititle,
timestamp = ten_years_ago)
# Setze den Titel der Wikipedia-Seite
wikititle <- "Adolf_Arndt"
# Berechne das Datum von vor 10 Jahren
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")
# Baue die URL für die API-Anfrage
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&formatversion=2&format=json")
# Sende die Anfrage
response <- GET(url)
# Parse die Antwort
content <- content(response, "text", encoding = "UTF-8")
# Zeige einen Teil des Inhalts an
cat(substr(content, 1, 500))
print(content)
revision_id <- 596462422
# Stelle eine Anfrage, um den Seiteninhalt basierend auf der Revision ID zu erhalten
response_content <- GET(url, query = list(
action = "parse",
format = "json",
oldid = revision_id
))
# Parse die Antwort
content_data <- fromJSON(rawToChar(response_content$content))
# Versuche, den Seitentext zu extrahieren
page_text <- content_data$parse$text$`*`
# Zeige einen Teil des Inhalts an
cat(substr(page_text, 1, 500))
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
print(html_content)
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
# Ändere die Basis-URL auf die deutsche Wikipedia
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
# Ändere die Basis-URL auf die deutsche Wikipedia
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
library(httr)
library(jsonlite)
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
# Ändere die Basis-URL auf die deutsche Wikipedia für den HTML-Inhaltsabruf
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
# Überprüfe, ob Revisionen vorhanden sind
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Cillien"  # Ersetze DEIN_ARTIKELTITEL_AUF_DEUTSCH mit dem exakten Titel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
if (length(parsed_content$query$pages[[1]]$revisions) > 0) {
revision_id <- parsed_content$query$pages[[1]]$revisions[[1]]$revid
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
html_content <- parsed_content_response$parse$text$`*`
cat(substr(html_content, 1, 500))
} else {
stop("Keine Revisionen gefunden, die den Kriterien entsprechen.")
}
wikititle <- "Adolf_Cillien"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Cillien"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
wikititle <- "Adolf_Arndt"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Feuring"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Feuring"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Adolf_Feuring"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://wikipedia.de/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
wikititle <- "berlin"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Berlin"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Germany"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
ikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
print(html_content)
wikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
wikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
start_of_year <- format(Sys.Date() - 3650, "%Y0101000000")
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", start_of_year,
"&format=json&formatversion=2")
response <- GET(url)
wikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
start_of_year <- format(Sys.Date() - 3650, "%Y0101000000")
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", start_of_year,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Aloys_Feldmann"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
wikititle <- "Alois_Rainer_(Politiker,_1965)"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
wikititle <- "Alois_Rainer_(Politiker,_1965)"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
wikititle <- "Alois_Rainer_(Politiker,_1965)"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://en.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
print(html_content)
wikititle <- "Alois_Rainer_(Politiker,_1965)"  # Beispiel Wikipedia-Seitentitel
ten_years_ago <- format(Sys.Date() - 3650, "%Y%m%d%H%M%S")  # Datum vor ca. 10 Jahren
url <- paste0("https://de.wikipedia.org/w/api.php?action=query&prop=revisions&titles=",
wikititle, "&rvlimit=1&rvdir=older&rvstart=", ten_years_ago,
"&format=json&formatversion=2")
response <- GET(url)
response_content <- content(response, "text", encoding = "UTF-8")
parsed_content <- fromJSON(response_content)
content_url <- paste0("https://de.wikipedia.org/w/api.php?action=parse&oldid=",
revision_id, "&format=json&prop=text")
content_response <- GET(content_url)
content_response_content <- content(content_response, "text", encoding = "UTF-8")
parsed_content_response <- fromJSON(content_response_content)
# Extrahiere den HTML-Inhalt
html_content <- parsed_content_response$parse$text$`*`
# Zeige einen Teil des HTML-Inhalts
cat(substr(html_content, 1, 500))
